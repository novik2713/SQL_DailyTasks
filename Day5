CREATE TABLE Pieces (
 Code INTEGER NOT NULL,
 Name TEXT NOT NULL,
 PRIMARY KEY (Code)
 );
CREATE TABLE Providers (
 Code VARCHAR(40) NOT NULL,  
 Name TEXT NOT NULL,
PRIMARY KEY (Code) 
 );
CREATE TABLE Provides (
 Piece INTEGER, 
 Provider VARCHAR(40), 
 Price INTEGER NOT NULL,
 PRIMARY KEY(Piece, Provider) 
 );
 

INSERT INTO Providers(Code, Name) VALUES('HAL','Clarke Enterprises');
INSERT INTO Providers(Code, Name) VALUES('RBT','Susan Calvin Corp.');
INSERT INTO Providers(Code, Name) VALUES('TNBC','Skellington Supplies');

INSERT INTO Pieces(Code, Name) VALUES(1,'Sprocket');
INSERT INTO Pieces(Code, Name) VALUES(2,'Screw');
INSERT INTO Pieces(Code, Name) VALUES(3,'Nut');
INSERT INTO Pieces(Code, Name) VALUES(4,'Bolt');

INSERT INTO Provides(Piece, Provider, Price) VALUES(1,'HAL',10);
INSERT INTO Provides(Piece, Provider, Price) VALUES(1,'RBT',15);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'HAL',20);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'RBT',15);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'TNBC',14);
INSERT INTO Provides(Piece, Provider, Price) VALUES(3,'RBT',50);
INSERT INTO Provides(Piece, Provider, Price) VALUES(3,'TNBC',45);
INSERT INTO Provides(Piece, Provider, Price) VALUES(4,'HAL',5);
INSERT INTO Provides(Piece, Provider, Price) VALUES(4,'RBT',7);


--Questions
-- 5.1 Select the name of all the pieces. 
SELECT Name FROM PIECES
-- 5.2  Select all the providers' data. 
SELECT *
FROM Providers
-- 5.3 Obtain the average price of each piece (show only the piece code and the average price).
SELECT Piece, AVG(Price)
FROM Provides
GROUP BY Piece
-- 5.4  Obtain the names of all providers who supply piece 1.
SELECT Providers.Name
FROM Providers
WHERE Providers.Code IN(
	SELECT Provider
	FROM Provides
	WHERE Piece = '1')
-- 5.5 Select the name of pieces provided by provider with code "HAL".
SELECT Pieces.Name 
FROM Pieces
JOIN Provides ON Pieces.Code = Provides.Piece
WHERE Provides.Provider = 'HAL'

--JOIN Providers ON Provides.Provider = Providers.Code not needed
SELECT * FROM Provides
SELECT * FROM Providers
SELECT * FROM Pieces
-- 5.6 For each piece, find the most expensive offering of that piece and include the piece name, provider name, and price (note that there could be two providers who supply the same piece at the most expensive price).
SELECT Pieces.Name,  Providers.Name, MAX(Provides.Price)
FROM Pieces
JOIN Provides ON Pieces.Code = Provides.Piece
JOIN Providers ON Provides.Provider = Providers.Code
GROUP BY Pieces.Name;

-- WITH SUBQUERY (IF THERE ARE 2 WITH MAX PRICE
INSERT INTO Provides VALUES (4,"TNBC", 7);
--after adding the same value with another provider, rewrite code

SELECT Pieces.Name AS PieceName, Providers.Name AS ProviderName, p.MaxPrice
FROM Pieces
JOIN (
    SELECT Piece, MAX(Price) AS MaxPrice
    FROM Provides
    GROUP BY Piece
) p ON Pieces.Code = p.Piece
JOIN Provides ON p.Piece = Provides.Piece AND p.MaxPrice = Provides.Price
JOIN Providers ON Provides.Provider = Providers.Code;


-- 5.7 Add an entry to the database to indicate that "Skellington Supplies" (code "TNBC") will provide sprockets (code "1") for 7 cents each.
INSERT INTO Provides VALUES ("1","TNBC","0.07")

-- 5.8 Increase all prices by one cent.
UPDATE Provides
SET Price = Price +0.01

-- 5.9 Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply bolts (code 4).
DELETE FROM Provides
WHERE Provider = 'RBT' AND Piece = '4'
-- 5.10 Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply any pieces (the provider should still remain in the database).
DELETE FROM Provides
WHERE Provider = 'RBT'
